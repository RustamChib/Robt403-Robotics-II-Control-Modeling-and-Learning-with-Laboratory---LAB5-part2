clear L
deg = pi/180;
L(1) = Revolute('d', 1, 'a', 0, 'alpha', pi/2, ...
    'I', [0, 0, 0, 0, 0, 0], ...
    'r', [0.5, 0, 0], ...
    'm', 0, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 1e-3, ...
    'Tc', [0 0], ...
    'qlim', [-180 180]*deg );

L(2) = Revolute('d', 0, 'a', 0.4318, 'alpha', 0, ...
    'I', [0.0125, 0.8396, 0.8396, 0, 0, 0], ...
    'r', [0.5, 0, 0], ...
    'm', 10, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 1e-3, ...
    'Tc', [0 0], ...
    'qlim', [-90 90]*deg );

L(3) = Revolute('d', 0, 'a', 0.4318, 'alpha', 0, ...
    'I', [0.0125, 0.8396, 0.8396, 0, 0, 0], ...
    'r', [0.5, 0, 0], ...
    'm', 10, ...
    'Jm', 1e-4, ...
    'G', 500, ...
    'B', 1e-3, ...
    'Tc', [0 0], ...
    'qlim', [-90 90]*deg );


rrr = SerialLink(L, 'name', 'rrr');
clear L
rrr.teach();
%home_pos = [0 0 -90*deg];
%hold_pos = [0 0 0];
%rrr.plot(home_pos);

%jacobian1 = rrr.jacob0(home_pos);
%G1 = rrr.gravload(home_pos);
%torque_home = jacobian1.*G1;

%jacobian2 = rrr.jacob0(hold_pos);
%G2 = rrr.gravload(hold_pos);
%torque_hold = jacobian2.*G2;



